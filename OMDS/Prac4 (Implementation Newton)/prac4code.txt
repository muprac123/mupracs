#Newton Method

import numpy as np

def f(x):
    return x**2 - 2

def f_prime(x):
    return 2 * x

def newton_method(x0, tol=1e-6, max_iter=100):
    x = x0
    print(f"Initial guess: x0 = {x0:.6f}")
    for i in range(max_iter):
        fx = f(x)
        fpx = f_prime(x)

        if abs(fpx) < 1e-12:
            raise ValueError("Zero derivative. No solution found or stuck.")

        x_new = x - fx / fpx
        print(f"Iteration {i+1}: x = {x_new:.6f}, f(x) = {f(x_new):.6e}")

        if abs(x_new - x) < tol:
            return x_new

        x = x_new

    raise ValueError("Did not converge within max_iter")

# Initial guess
x0_val = 1.0
try:
    root = newton_method(x0_val)
    print(f"\nApproximate root: {root:.6f}")
except ValueError as e:
    print(e)

# Example with another initial guess
x0_val_2 = 2.0
try:
    print("\n--- Trying another initial guess ---")
    root_2 = newton_method(x0_val_2, tol=1e-7)  # higher precision
    print(f"\nApproximate root: {root_2:.7f}")
except ValueError as e:
    print(e)

